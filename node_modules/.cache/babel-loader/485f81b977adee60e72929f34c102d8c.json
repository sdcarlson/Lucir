{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tristen\\\\Soap\\\\luguq\\\\Lucir\\\\src\\\\Components\\\\CheckoutForm\\\\PaymentForm.jsx\";\nimport React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Review from './Review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({\n  shippingData,\n  checkoutToken,\n  backStep,\n  onCaptureCheckout,\n  nextStep\n}) => {\n  const handleSubmit = async (event, elements, stripe) => {\n    event.preventDefault();\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log(error);\n    } else {\n      console.log(\"sending order data\");\n      const orderData = {\n        line_items: checkoutToken.live.line_items,\n        customer: {\n          firstname: shippingData.firstName,\n          lastname: shippingData.lastName,\n          email: shippingData.email\n        },\n        shipping: {\n          name: 'Primary',\n          street: shippingData.address1,\n          town_city: shippingData.city,\n          county_state: shippingData.shippingSubdivision,\n          postal_zip_code: shippingData.zip,\n          country: shippingData.shippingCountry\n        },\n        fulfillment: {\n          shipping_method: shippingData.shippingOption\n        },\n        payment: {\n          gateway: 'stripe',\n          stripe: {\n            payment_method_id: paymentMethod.id\n          }\n        },\n        billing: {\n          name: \"Primary\",\n          street: shippingData.address1,\n          town_city: shippingData.city,\n          county_state: shippingData.shippingSubdivision,\n          postal_zip_code: shippingData.zip,\n          country: shippingData.shippingCountry\n        }\n      };\n      console.log(orderData);\n      onCaptureCheckout(checkoutToken.id, orderData);\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Review, {\n      checkoutToken: checkoutToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      style: {\n        margin: '20px 0'\n      },\n      children: \"Payment method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n        children: ({\n          elements,\n          stripe\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, elements, stripe),\n          children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: backStep,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              disabled: !stripe,\n              color: \"primary\",\n              children: [\"Pay \", checkoutToken.live.subtotal.formatted_with_symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Tristen/Soap/luguq/Lucir/src/Components/CheckoutForm/PaymentForm.jsx"],"names":["React","Typography","Button","Divider","Elements","CardElement","ElementsConsumer","loadStripe","Review","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","PaymentForm","shippingData","checkoutToken","backStep","onCaptureCheckout","nextStep","handleSubmit","event","elements","stripe","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","orderData","line_items","live","customer","firstname","firstName","lastname","lastName","email","shipping","name","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","id","billing","margin","e","display","justifyContent","subtotal","formatted_with_symbol"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport Review from './Review';\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\n\r\nconst PaymentForm = ({ shippingData, checkoutToken, backStep, onCaptureCheckout, nextStep }) => {\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n        event.preventDefault();\r\n        if (!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n        if (error) {\r\n            console.log(error);\r\n        } else {\r\n            console.log(\"sending order data\");\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n                shipping: {\r\n                    name: 'Primary',\r\n                    street: shippingData.address1,\r\n                    town_city: shippingData.city,\r\n                    county_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry\r\n                },\r\n                fulfillment: { shipping_method: shippingData.shippingOption },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id\r\n                    }\r\n                },\r\n                billing: {\r\n                    name: \"Primary\",\r\n                    street: shippingData.address1,\r\n                    town_city: shippingData.city,\r\n                    county_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry\r\n                }\r\n            }\r\n            console.log(orderData);\r\n\r\n            onCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>{({ elements, stripe }) => (\r\n                    <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                        <CardElement />\r\n                        <br /><br />\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                            <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">Pay {checkoutToken.live.subtotal.formatted_with_symbol}</Button>\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                )}</ElementsConsumer>\r\n\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}