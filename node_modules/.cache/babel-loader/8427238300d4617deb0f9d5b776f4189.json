{"ast":null,"code":"var _jsxFileName = \"/Users/sethcarlson/liveversion/src/Components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Link } from 'react-router-dom';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  checkoutToken,\n  next\n}) => {\n  _s();\n\n  const methods = useForm();\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n\n  const fetchSubdivisions = async () => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions('US');\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[5]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: methods.handleSubmit(data => {\n          next({ ...data\n          });\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"firstName\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"lastName\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"email\",\n            label: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"zip\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Shipping State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: shippingSubdivision,\n            fullWidth: true,\n            onChange: e => setShippingSubdivision(e.target.value),\n            children: subdivisions.map(subdivision => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: subdivision.id,\n              children: subdivision.label\n            }, subdivision.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/cart\",\n            variant: \"outlined\",\n            children: \"Back to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"Qh0BBQNjVpagqgYzzts/QPeff8A=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/sethcarlson/liveversion/src/Components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","Link","commerce","AddressForm","checkoutToken","next","methods","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","subdivisions","Object","entries","map","code","name","id","label","fetchSubdivisions","services","localeListSubdivisions","keys","handleSubmit","data","e","target","value","subdivision","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\n\n\nconst AddressForm = ({ checkoutToken, next }) => {\n\n    const methods = useForm();\n\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\n\n    const fetchSubdivisions = async () => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions('US');\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[5]);\n    }\n\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom >Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => {\n                    next({ ...data });\n\n                })}>\n                    <Grid container spacing={3}>\n                        <FormInput name='firstName' label='First Name' />\n                        <FormInput name='lastName' label='Last Name' />\n                        <FormInput name='email' label='E-mail' />\n                        <FormInput name='address1' label='Address' />\n                        <FormInput name='city' label='City' />\n                        <FormInput name='zip' label='ZIP / Postal code' />\n\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping State</InputLabel>\n                        <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                            {subdivisions.map((subdivision) => (\n                                <MenuItem key={subdivision.id} value={subdivision.id} >\n                                    {subdivision.label}\n                                </MenuItem>\n                            ))}\n\n                        </Select>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to cart</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm;\n"]},"metadata":{},"sourceType":"module"}